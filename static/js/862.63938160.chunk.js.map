{"version":3,"file":"static/js/862.63938160.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.18\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.18\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.18 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_toPropertyKey","arg","key","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_defineProperty","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","hasOwnProperty","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","_classCallCheck","Constructor","_defineProperties","descriptor","_createClass","protoProps","staticProps","_setPrototypeOf","o","setPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","_getPrototypeOf","getPrototypeOf","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","valueOf","result","Super","NewTarget","this","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","cancel","index","splice","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","frame","keepAlive","immediate","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_super","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","arr","arrayLikeToArray","iter","from","unsupportedIterableToArray","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","read","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","resolveCSSVariables","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","property","receiver","base","desc","SVGVisualElement","getAttribute","createDomVisualElement","motion","_ref$forwardMotionPro","createDomMotionConfig"],"sourceRoot":""}